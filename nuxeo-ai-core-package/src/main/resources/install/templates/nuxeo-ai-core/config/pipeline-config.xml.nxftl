<?xml version="1.0"?>
<component name="org.nuxeo.ai.Pipeline.defaultConfig">

<extension point="pipes" target="org.nuxeo.ai.Pipeline">

  <pipe id="pipe.images" enabled="${nuxeo.ai.images.enabled}">
    <supplier>
      <event name="pictureViewsGenerationDone">
        <filter class="org.nuxeo.ai.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.FacetFilter">
          <option name="includedFacets">Picture</option>
        </filter>
      </event>
      <event name="documentCreated">
        <filter class="org.nuxeo.ai.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.FacetFilter">
          <option name="excludedFacets">Picture,Folderish</option>
        </filter>
        <filter class="org.nuxeo.ai.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">image.*</option>
          <option name="properties">file:content</option>
        </filter>
      </event>
      <event name="documentModified">
        <filter class="org.nuxeo.ai.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.DirtyPropertyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.FacetFilter">
          <option name="excludedFacets">Picture,Folderish</option>
        </filter>
        <filter class="org.nuxeo.ai.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">image.*</option>
        </filter>
        <option name="properties">file:content</option>
      </event>
    </supplier>
    <consumer>
      <stream name="images"/>
    </consumer>
    <transformer class="org.nuxeo.ai.pipes.functions.PropertiesToStream">
      <option name="blobProperties">file:content</option>
      <option name="blobPropertiesType">img</option>
      <option name="customProperties">picture:info/width,picture:info/height</option>
    </transformer>
  </pipe>

  <pipe id="pipe.video" enabled="${nuxeo.ai.video.enabled}" function="org.nuxeo.ai.pipes.functions.PropertiesToStream">
    <supplier>
      <event name="videoConversionsDone">
        <filter class="org.nuxeo.ai.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.FacetFilter">
          <option name="includedFacets">Video</option>
        </filter>
        <filter class="org.nuxeo.ai.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">video.*</option>
          <option name="properties">file:content</option>
        </filter>
        <option name="properties">file:content</option>
      </event>
    </supplier>
    <consumer>
      <stream name="videos"/>
    </consumer>
    <transformer>
      <option name="blobProperties">file:content</option>
      <option name="blobPropertiesType">img</option>
    </transformer>
  </pipe>

  <pipe id="pipe.audio" enabled="${nuxeo.ai.audio.enabled}">
    <supplier>
      <event name="documentCreated">
        <filter class="org.nuxeo.ai.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">audio.*</option>
          <option name="properties">file:content</option>
        </filter>
      </event>
      <event name="documentModified">
        <filter class="org.nuxeo.ai.pipes.filters.NotSystemOrProxyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.DirtyPropertyFilter"/>
        <filter class="org.nuxeo.ai.pipes.filters.MimeBlobPropertyFilter">
          <option name="mimePattern">audio.*</option>
        </filter>
        <option name="properties">file:content</option>
      </event>
    </supplier>
    <consumer>
      <stream name="audio"/>
    </consumer>
    <transformer>
      <option name="blobProperties">file:content</option>
      <option name="blobPropertiesType">img</option>
    </transformer>
  </pipe>
</extension>

<#if "${nuxeo.ai.text.enabled}" == "true">
  <extension point="text" target="org.nuxeo.ai.Pipeline">
    <text windowSize="12">
      <consumer>
        <stream name="text" />
      </consumer>
    </text>
  </extension>
</#if>
</component>
