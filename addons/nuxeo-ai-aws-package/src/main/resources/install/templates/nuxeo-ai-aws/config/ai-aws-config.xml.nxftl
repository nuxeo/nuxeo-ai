<?xml version="1.0"?>
<component name="org.nuxeo.ai.aws.config" version="1.0">
    <require>org.nuxeo.ai.services.AIComponent</require>
<#if "${nuxeo.enrichment.aws.calls.tracing}" == "true">
    <extension target="org.nuxeo.activate.log4j.service.Log4jComponent" point="log4j">
      <log4j name="aws-calls">
        <loggers>
          <Logger name="com.amazonaws.request" level="DEBUG"/>
        </loggers>
      </log4j>
    </extension>
</#if>

<#if "${nuxeo.enrichment.aws.images}" == "true">
  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="labelsProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">images</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.imageLabels</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="textProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">images</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.textDetection</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="faceProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">images</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.faceDetection</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="celebrityProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">images</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.celebrityDetection</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="unsafeImagesProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">images</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.unsafeImages</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>
</#if>

<#if "${nuxeo.enrichment.aws.text}" == "true">
  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="textSentimentProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">text</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.textSentiment</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="textKeyphraseProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">text</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.textKeyphrase</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="textEntitiesProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">text</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.textEntities</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="textKeyphraseProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <option name="source">text</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.textKeyphrase</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>
</#if>

<#if "${nuxeo.enrichment.aws.document.text}" == "true">
  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="textractTextProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">images</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.documentText</option>
    </streamProcessor>
  </extension>
</#if>

<#if "${nuxeo.enrichment.aws.document.analyze}" == "true">
  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="textractDocProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">images</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.documentAnalyze</option>
    </streamProcessor>
  </extension>
</#if>

<#if "${nuxeo.enrichment.aws.document.analyze}" == "true" || "${nuxeo.enrichment.aws.document.text}" == "true">
    <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
        <streamProcessor name="raiseEventProcessor" defaultConcurrency="1" defaultPartitions="1"
                         logConfig="${nuxeo.ai.stream.config.name}"
                         class="org.nuxeo.ai.functions.RaiseEnrichmentEvent">
          <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
          <option name="source">enrichment.in</option>
          <option name="eventName">textractMetadataCreated</option>
        </streamProcessor>
    </extension>
</#if>

<#if "${nuxeo.enrichment.aws.video}" == "true">
  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="videoLabelsProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">videos</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.videoLabels</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="videoUnsafeProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">videos</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.unsafeVideo</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="videoFaceProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
      <option name="source">videos</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.videoFaceDetection</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>

    <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
      <streamProcessor name="videoCelebrityProcessor" defaultConcurrency="1" defaultPartitions="4"
                       logConfig="${nuxeo.ai.stream.config.name}"
                       class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
        <policy name="default" maxRetries="${nuxeo.enrichment.aws.enrichment.retry}" delay="200ms" maxDelay="2s" continueOnFailure="true" />
        <option name="source">videos</option>
        <option name="sink">enrichment.in</option>
        <option name="enrichmentProviderName">aws.videoCelebrityDetection</option>
        <option name="cache">${nuxeo.enrichment.aws.cache}</option>
      </streamProcessor>
    </extension>

  <extension target="org.nuxeo.ai.sns.NotificationService" point="topics">
      <topic topicArn="${nuxeo.enrichment.aws.sns.topic.arn}"
             type="detect"
             path="/nuxeo/site/aiaddons/rekognition/callback/labels"/>
  </extension>
</#if>

<#if "${nuxeo.enrichment.aws.transcribe.enabled}" == "true">
  <extension target="org.nuxeo.ecm.platform.video.service.VideoService"
             point="automaticVideoConversions">
    <automaticVideoConversion name="WAV 16K" order="999"/>
  </extension>

  <extension target="org.nuxeo.runtime.stream.service" point="streamProcessor">
    <streamProcessor name="videoTranscribeProcessor" defaultConcurrency="1" defaultPartitions="4"
                     logConfig="${nuxeo.ai.stream.config.name}"
                     class="org.nuxeo.ai.enrichment.EnrichingStreamProcessor">
      <option name="source">videos</option>
      <option name="sink">enrichment.in</option>
      <option name="enrichmentProviderName">aws.transcribe</option>
      <option name="cache">${nuxeo.enrichment.aws.cache}</option>
    </streamProcessor>
  </extension>
</#if>

</component>
