name: Release Publish

on:
  workflow_dispatch:
    inputs:
      increment:
        type: version
        description: Bug is for patch and feature for minor
        options:
          - bug
          - feature
          - major
      jdk:
        type: string
        description: JDK Version
        options:
          - "8"
          - "11"

jobs:
  release-publish:
    name: "Release & Publish"
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: "-Xms1g -Xmx1536m"
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK

        uses: actions/setup-java@v3
        with:
          java-version: ${{ github.event.inputs.jdk }}
          distribution: "zulu"
          cache: maven

      - name: "Update settings.xml with server configuration"
        run: |
          echo '<settings>
              <servers>
                <server>
                  <id>maven-internal</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-private</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>nuxeo-studio</id>
                  <username>${{ secrets.connect-auth-user }}</username>
                  <password>${{ secrets.connect-auth-token }}</password>
                </server>
              </servers>
              </settings>' > ~/.m2/settings.xml

      - name: Set env
        run: echo "CURRENT_VERSION=\"$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)\"" >> $GITHUB_ENV
      - name: Tag and check if compiling
        run: |
          currentVersion=$CURRENT_VERSION
          releasedVersion=${currentVersion%-*}
          echo "RELEASED_VERSION=\"${releasedVersion}\"" >> $GITHUB_ENV
          find ./ -type f -exec sed -i '' -e "s/${currentVersion}/${releasedVersion}/" {} \;
          git clean -f -d
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b release-v${releasedVersion}
          git add .
          git tag -a v${releasedVersion} -m "Release ${releasedVersion}"
          mvn -ntp install -DskipInstall
          git push origin v${releasedVersion}
          git push origin release-v${releasedVersion}

      - name: Archive packages
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: |
            nuxeo-ai-core-package/target/nuxeo-ai-core-$RELEASED_VERSION.zip

      - name: Publish Nuxeo packages
        env:
          CONNECT_PREPROD_URL: https://nos-preprod-connect.nuxeocloud.com/nuxeo
        run: |
          PACKAGE="nuxeo-ai-core-package/target/nuxeo-ai-core-$RELEASED_VERSION.zip"
          STATUS_CODE=`curl -i --silent --output publish-req.output -w "%{http_code}" -u "${{ secrets.CONNECT_PREPROD_AUTH }}" -F package=@$PACKAGE "$CONNECT_PREPROD_URL/site/marketplace/upload?batch=true"`
          cat publish-req.output
          if [[ "$STATUS_CODE" != "200" ]]
          then
            exit 1
          else
            exit 0
          fi

      - name: Bump release version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ github.event.inputs.version }}
          version-fragment: ${{ github.event.inputs.increment }}

      - name: Post Release (in master or master-10.10)
        run: |
          git checkout ${{ github.base_ref }}
          find ./ -type f -exec sed -i '' -e "s/$CURRENT_VERSION/${{ steps.bump_version.outputs.next-version }}/" {} \;
          git clean -f -d
          git add .
          git commit -m "Post Release $CURRENT_VERSION"
          git push origin ${{ github.base_ref }}

  notify-on-error:
    runs-on: ubuntu-latest
    needs: release-publish
    if: ${{ failure() }}
    steps:
      - name: Slack Notification
        id: slack
        uses: slackapi/slack-github-action@007b2c3c751a190b6f0f040e47ed024deaa72844
        with:
          channel-id: "C9W4P9RKM"
          slack-message: "Nuxeo AI Core ${{ github.workflow }} workflow failed!\n${{ github.event.head_commit.url }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_NOTIFICATION_BOT_TOKEN }}
