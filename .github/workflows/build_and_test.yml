# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_call:
    inputs:
      aws-account:
        required: true
        type: string
      aws-region:
        required: false
        type: string
        default: us-east-1
      should-push:
        required: false
        type: boolean
        default: false
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      packages-auth-user:
        required: true
      packages-auth-token:
        required: true
      connect-auth-user:
        required: true
      connect-auth-token:
        required: true

jobs:
  build:
    name: "Build 10.10"
    runs-on: ubuntu-latest
    if: ${{ github.base_ref == 'master-10.10' || github.ref_name == 'master-10.10' }}
    env:
      MAVEN_OPTS: "-Xms1g -Xmx1536m"
    outputs:
      version: ${{ steps.project.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "zulu"
          cache: maven
      - name: "Install dependencies"
        run: |
          sudo apt-get -y update && sudo apt-get install -y --no-install-recommends \
            perl \
            locales \
            pwgen \
            imagemagick \
            poppler-utils \
            libwpd-tools \
            exiftool \
            ghostscript \
            ffmpeg \
            x264
      - name: "Update settings.xml with server configuration"
        run: |
          echo '<settings>
              <servers>
                <server>
                  <id>maven-internal</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-team-platform-private</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-private</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-public-releases</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-public-snapshots</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>nuxeo-studio</id>
                  <username>${{ secrets.connect-auth-user }}</username>
                  <password>${{ secrets.connect-auth-token }}</password>
                </server>
              </servers>
              </settings>' > ~/.m2/settings.xml
      - name: Run Tests with Maven
        run: mvn install -fae -B -Dnuxeo.test.elasticsearch.addressList=http://localhost:9200
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key  }}
      - name: Publish Test Report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
      - name: Get project version
        run: echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec | xargs echo -n)" >> $GITHUB_ENV
      - run: ls -alR | grep ".*package.*.zip"
      - run: ls -alR | grep ".*nuxeo-ai-core-.*.zip"
      - name: Upload packages build artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuxeo-ai-github-packages-build
          path: |
            ./**/target/**/*package*.zip
            ./nuxeo-ai-core-package/target/nuxeo-ai-core-${{ env.VERSION }}.zip
      - name: Publish package
        if: ${{ inputs.should-push }}
        run: mvn --batch-mode deploy -nsu -DskipTests
      - name: Publish nuxeo-ai-core package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: nuxeo-ai-core-package/target/nuxeo-ai-core-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
      - name: Publish nuxeo-ai-aws-package package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: addons/nuxeo-ai-aws-package/target/nuxeo-ai-aws-package-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
      - name: Publish nuxeo-ai-gcp-package package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: addons/nuxeo-ai-gcp-package/target/nuxeo-ai-gcp-package-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
      - name: Publish nuxeo-ai-image-quality-package package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: addons/nuxeo-ai-image-quality-package/target/nuxeo-ai-image-quality-package-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
  build-master:
    name: "Build Master LTS"
    runs-on: ubuntu-latest
    if: ${{ github.base_ref == 'master' || github.ref_name == 'master' }}
    env:
      MAVEN_OPTS: "-Xms1g -Xmx1536m"
    outputs:
      version: ${{ steps.project.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "zulu"
          cache: maven
      - name: "Install dependencies"
        run: |
          sudo apt-get -y update && sudo apt-get install -y --no-install-recommends \
            perl \
            locales \
            pwgen \
            imagemagick \
            poppler-utils \
            libwpd-tools \
            exiftool \
            ghostscript \
            ffmpeg \
            x264
      - name: "Update settings.xml with server configuration"
        run: |
          echo '<settings>
              <servers>
                <server>
                  <id>maven-internal</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-team-platform-private</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-private</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-public-releases</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>maven-public-snapshots</id>
                  <username>${{ secrets.packages-auth-user }}</username>
                  <password>${{ secrets.packages-auth-token }}</password>
                </server>
                <server>
                  <id>nuxeo-studio</id>
                  <username>${{ secrets.connect-auth-user }}</username>
                  <password>${{ secrets.connect-auth-token }}</password>
                </server>
              </servers>
              </settings>' > ~/.m2/settings.xml
      - name: Run Tests with Maven
        run: mvn install -fae -B -Dnuxeo.test.elasticsearch.addressList=http://localhost:9200
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key  }}
      - name: Publish Test Report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1
      - name: Get project version
        run: echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec | xargs echo -n)" >> $GITHUB_ENV
      - run: ls -alR | grep ".*package.*.zip"
      - run: ls -alR | grep ".*nuxeo-ai-core-.*.zip"
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuxeo-ai-github-build
          path: |
            ./**/target/**/*package*.zip
            ./nuxeo-ai-core-package/target/nuxeo-ai-core-*.zip
      - name: Publish package
        if: ${{ inputs.should-push }}
        run: mvn --batch-mode deploy -nsu -DskipTests
      - name: Publish nuxeo-ai-core package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: nuxeo-ai-core-package/target/nuxeo-ai-core-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
      - name: Publish nuxeo-ai-aws-package package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: addons/nuxeo-ai-aws-package/target/nuxeo-ai-aws-package-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
      - name: Publish nuxeo-ai-gcp-package package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: addons/nuxeo-ai-gcp-package/target/nuxeo-ai-gcp-package-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
      - name: Publish nuxeo-ai-image-quality-package package to Production Connect Marketplace
        if: ${{ inputs.should-push }}
        env:
          PACKAGE: addons/nuxeo-ai-image-quality-package/target/nuxeo-ai-image-quality-package-${{ env.VERSION }}.zip
          CONNECT_URL: https://connect.nuxeo.com/nuxeo
        run: curl -i -u "${{ secrets.connect-auth-user }}:${{ secrets.connect-auth-token }}" -F package=@$PACKAGE "$CONNECT_URL/site/marketplace/upload?batch=true"
