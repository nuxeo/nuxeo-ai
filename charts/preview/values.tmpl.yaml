expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    exposer: Ingress
    domain: ai.dev.nuxeo.com
    http: true
    tlsacme: true
    tlsSecretName: ai-tls
    urltemplate: '{{.Service}}-{{.Namespace}}.{{.Domain}}'

cleanup:
  Args:
    - --cleanup
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded

nuxeo:
  fullnameOverride: preview
  nuxeo:
    podAnnotations:
      preview/scm.ref: ${SCM_REF}
    podLabels:
      branch: "$BRANCH_NAME"
      team: ai
      resource: pod
      usage: preview
    service:
      annotations:
        fabric8.io/expose: "true"
        fabric8.io/ingress.annotations: |-
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/proxy-body-size: 0
          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;
      labels:
        team: ai
        resource: service
        usage: preview
    image:
      repository: ${DOCKER_REGISTRY}/${ORG}/${APP_NAME}
      tag: ${VERSION}
      pullPolicy: Always
    packages: "/tmp/nuxeo-web-ui.zip /tmp/nuxeo-ai-core.zip nuxeo-jira-ai-${JIRA_AI_VERSION}"
    custom_params: |-
      nuxeo.ai.insight.client.enable=true
      nuxeo.ai.insight.client.projectid=jira
      nuxeo.ai.insight.client.target.url=https://nuxeo-ai-dev-dev.apps.prod.nuxeo.io/nuxeo
      nuxeo.ai.insight.client.token=${AI_INSIGHT_CLIENT_TOKEN}
      nuxeo.ai.insight.datasource.label=dev
      nuxeo.url=${PREVIEW_URL}/nuxeo
      nuxeo.cors.urls=${PREVIEW_URL} https://nuxeo-ai-dev-dev.apps.prod.nuxeo.io *
    custom_envs:
      - name: NUXEO_CLID
        valueFrom:
          secretKeyRef:
            name: instance-clid
            key: instance.clid
      - name: AI_INSIGHT_CLIENT_TOKEN
        valueFrom:
          secretKeyRef:
            name: ai-insight-client-token
            key: text
    persistence:
      enabled: ${PERSISTENCE}
  postgresql:
    deploy: false
  mongodb:
    deploy: ${PERSISTENCE}
    useStatefulSet: ${PERSISTENCE}
    persistence:
      enabled: ${PERSISTENCE}
    labels:
      branch: "$BRANCH_NAME"
      resource: deployment
      team: ai
      usage: preview
    podLabels:
      branch: "$BRANCH_NAME"
      resource: pod
      team: ai
      usage: preview
  elasticsearch:
    deploy: ${PERSISTENCE}
    master:
      persistence:
        enabled: ${PERSISTENCE}
    data:
      persistence:
        enabled: ${PERSISTENCE}

# needed for instance-clid replicator and local usage
local:
  instance_clid:
